0010 REM STD_INPUT.BBX - STANDARD INPUT ROUTINE
0100 REM -----<SETUP
0110 LET TCHAN=UNT; OPEN (UNT)FID(0)
0120 ENTER X,Y,MINLEN,MAXLEN,MINVAL,MAXVAL,TEXT_CASE,DATA_TYPE,INP_MASK$,NEWVAL$,ROUTE
0120:$,CONTAINS$,DEFAULT$,HELPID$,MISC$
0140 REM 
0150 IF NEWVAL$="" THEN LET NEWVAL$=DEFAULT$
0160 DIM MASK1$(MAXLEN,"X")
0170 DIM BLANKS$(80)
0180 LET ORIGVAL$=NEWVAL$,ROUTE$=""
0200 REM Define the date function.
0210 DEF FNDATE$(W$)=W$(NUM(STBL("DATEPOS1")),2)+"/"+W$(NUM(STBL("DATEPOS2")),
0210:2)+"/"+W$(1,4)
0290 REM -----<SET MASK
0320 IF DATA_TYPE=5 THEN LET MASK1$="XX/XX/XXXX",NEWVAL$=NEWVAL$+BLANKS$,NEWVAL$=NE
0320:WVAL$(NUM(STBL("DATEPOS1")),2)+NEWVAL$(NUM(STBL("DATEPOS2")),2)+NEWVAL$(1
0320:,4)
0330 IF DATA_TYPE=6 THEN LET MASK1$="XX/XXXX",NEWVAL$=NEWVAL$+BLANKS$,NEWVAL$=NEWVA
0330:L$(5,2)+NEWVAL$(1,4)
0340 IF (DATA_TYPE=3 OR DATA_TYPE=4) AND INP_MASK$<>"" AND POS("PHONE"=INP_MASK$)=0 THEN LET MAS
0340:K1$=INP_MASK$
0345 IF (DATA_TYPE=3 OR DATA_TYPE=4) AND POS("PHONE"=INP_MASK$)<>0 THEN LET MASK1$="(XXX)XXX-XXXX"
0400 REM -----<Verify Field Length
0410 IF LEN(NEWVAL$)>MAXLEN THEN LET NEWVAL$=NEWVAL$(1,MAXLEN); LET ERRMSG$="W
0410:ARNING: DATA HAS BEEN TRUNCATED TO MAXIMUM FIELD LENGTH"; PRINT 'RB','ER'
0410:,@(0,22),'CL',@(5,22),ERRMSG$,'BR',
1000 REM -----<INPUT SECTION
1010 GOSUB 10000; GOTO 1130
1030 PRINT 'BR',
1105 IF TEXT_CASE=1 THEN PRINT 'UC', ELSE PRINT 'LC',
1110 INPUTE X,Y,MASK1$," ",NEWVAL$
1125 PRINT 'ER',
1130 IF ERRMSG$<>"" THEN PRINT @(0,22),'CL',
1140 GOTO 1200
1200 REM -----<HANDLE SPECIAL FUNCTIONS
1205 LET EXITT$=""
1215 IF Z9=0 THEN GOTO 4000
1220 IF Z9>0 AND Z9<20 THEN LET ROUTE$="F"+STR(Z9); GOTO 9100
1230 ON Z9-21 GOSUB 1900,2100,2400,2500,1700,1750,1245
1245 IF EXITT$="IMMED" THEN GOTO 9100 ELSE GOTO 4000
1700 REM -----<UP ARROW
1710 LET ROUTE$="UPARROW",EXITT$="AFTER-EDIT"
1720 RETURN 
1750 REM -----<DOWN ARROW
1760 LET ROUTE$="DOWNARROW",EXITT$="AFTER-EDIT"
1770 RETURN 
1900 REM -----<PAGE DOWN KEY
1910 LET ROUTE$="NEXTREC"
1920 IF NEWVAL$="" OR NEWVAL$=BLANKS$(1,MAXLEN) THEN LET EXITT$="IMMED" ELSE L
1920:ET EXITT$="AFTER-EDIT"
1930 RETURN 
2100 REM -----<PAGE UP KEY
2110 LET ROUTE$="PRIORREC"
2111 IF NEWVAL$="" OR NEWVAL$=BLANKS$(1,MAXLEN) THEN LET EXITT$="IMMED" ELSE L
2111:ET EXITT$="AFTER-EDIT"
2120 RETURN 
2400 REM -----<HOME
2410 LET ROUTE$="HOME"
2411 LET EXITT$="IMMED"
2420 RETURN 
2500 REM -----<END KEY
2510 LET ROUTE$="END"
2520 LET EXITT$="AFTER-EDIT"; RETURN 
4000 REM -----<PROCESS NEWLY INPUTTED VALUE
4020 LET ERRMSG$="",DISPVAL$=""
4030 IF ORIGVAL$<>"" AND NEWVAL$="" THEN LET NEWVAL$=ORIGVAL$
4031 IF (CVS(NEWVAL$,2)="" AND NEWVAL$<>" ") AND ROUTE$<>"UPARROW" THEN LET NE
4031:WVAL$=DEFAULT$,DISPVAL$=NEWVAL$
4035 IF NEWVAL$=" " THEN LET NEWVAL$=""
4036 IF CVS(NEWVAL$,2)="" AND (ROUTE$="UPARROW" OR ROUTE$="END") THEN GOTO 4070
4040 IF LEN(NEWVAL$)<MINLEN OR LEN(NEWVAL$)>MAXLEN THEN LET ERRMSG$="YOUR ENTR
4040:Y MUST HAVE LENGTH OF "+STR(MINLEN)+" - "+STR(MAXLEN); GOTO 4060
4051 ON DATA_TYPE-1 GOSUB 4200,4100,4700,4700
4060 IF ERRMSG$<>"" THEN PRINT 'RB','ER',@(0,22),'CL',@(5,22),ERRMSG$,'BR',; GOTO 1000
4070 REM -----<Redisplay
4072 LET Z9$=DISPVAL$; IF LEN(Z9$)<MAXLEN THEN LET Z9$=Z9$+BLANKS$(1,MAXLEN-LE
4072:N(DISPVAL$))
4073 IF (DATA_TYPE=5 OR DATA_TYPE=6) THEN LET Z9$=Z9$+BLANKS$,Z9$=Z9$(1,MAXLEN+2)
4075 PRINT @(X,Y),Z9$
4090 GOTO 9100
4100 REM -----<EDIT CENTS
4110 LET ERRMSG$="ENTER CURRENCY AMOUNT WITH NO DECIMALS"
4120 IF POS("."=NEWVAL$)<>0 THEN RETURN 
4130 LET Z9=NUM(NEWVAL$,ERR=4160); LET ERRMSG$=""
4140 IF Z9<MINVAL OR Z9>MAXVAL THEN LET ERRMSG$="YOUR ENTRY MUST BE BETWEEN "+
4140:STR(MINVAL)+" AND "+STR(MAXVAL); RETURN 
4150 LET DISPVAL$=STR(Z9*DECCONV:INP_MASK$)
4160 RETURN 
4200 REM -----<EDIT NUMBERS
4210 LET ERRMSG$="INVALID NUMERIC ENTRY"
4220 LET Z9=NUM(NEWVAL$,ERR=4250); LET ERRMSG$=""
4240 IF Z9<MINVAL OR Z9>MAXVAL THEN LET ERRMSG$="YOUR ENTRY MUST BE BETWEEN "+
4240:STR(MINVAL)+" AND "+STR(MAXVAL); RETURN 
4245 LET DISPVAL$=STR(Z9:INP_MASK$)
4250 RETURN 
4700 REM -----<EDIT STRINGS
4702 IF CONTAINS$<>"" AND NEWVAL$<>"" THEN GOSUB 5000
4705 IF DATA_TYPE=3 THEN LET NEWVAL$=NEWVAL$+BLANKS$(1,MAXLEN-LEN(NEWVAL$))
4710 LET DISPVAL$=NEWVAL$
4890 RETURN 
5000 REM -----<PROCESS CONTAINS$ STRING
5035 IF POS(";;"=NEWVAL$)<>0 THEN LET ERRMSG$="Must contain "+CONTAINS$; GOTO 5090
5045 LET TXVARPOS=1
5050 REM (get next value in x;x;x list)
5051 LET TXVARLEN=1
5052 REM (loop:)
5053 IF LEN(NEWVAL$)<(TXVARPOS+TXVARLEN)-1 THEN LET TXVARLEN=TXVARLEN-1; GOTO 
5053:5060
5055 IF NEWVAL$(TXVARPOS+TXVARLEN-1,1)=";" THEN LET TXVARLEN=TXVARLEN-1; GOTO 
5055:5060
5056 LET TXVARLEN=TXVARLEN+1
5059 GOTO 5052
5060 REM (check if value is in CONTAINS$ list)
5062 IF POS(NEWVAL$(TXVARPOS,TXVARLEN)=CONTAINS$)=0 THEN LET ERRMSG$="Must con
5062:tain "+CONTAINS$; GOTO 5090
5075 LET TXVARPOS=TXVARPOS+TXVARLEN+1; REM +1 gets past semicolon
5076 IF LEN(NEWVAL$)<TXVARPOS THEN GOTO 5090
5078 GOTO 5050
5090 RETURN 
9100 REM -----<CHAIN OUT
9105 CLOSE (TCHAN)
9110 EXIT 
10000 REM -----<Input Routine - Setup
10010 LET XTMP=1,YTMP=0,ITMP$="",XUSE$="",ETMP$=NEWVAL$
10020 LET FTMP$=$1C1D1E1F16190A0B$
10030 LET ITOG$="REP"
10090 GOSUB 10920
10099 REM 
10100 REM -----<Input
10110 PRINT @(X+XTMP-1,Y+YTMP),
10120 INPUT RECORD(TCHAN,SIZ=1)ITMP$
10130 LET XCTL=CTL
10190 ON POS(ITMP$=$1403101806111213050C080D0917$+FTMP$) GOTO 10200,10800,1035
10190:0,10400,10700,10350,10400,10400,10300,10500,10300,10600,10500,10300,1075
10190:0,11000
10199 REM 
10200 REM -----<Character Entry
10210 IF ASC(ITMP$)<32 OR XTMP>MAXLEN THEN GOTO 10100
10215 IF XUSE$="" THEN LET ETMP$=""; GOSUB 10900
10220 IF TEXT_CASE=1 THEN IF ASC(ITMP$)>96 AND ASC(ITMP$)<123 THEN LET ITMP$=
10220:CVS(ITMP$,4)
10225 IF ITOG$="REP" THEN IF XTMP<=LEN(ETMP$) THEN LET ETMP$(XTMP,1)=ITMP$ ELS
10225:E LET ETMP$=ETMP$+ITMP$ FI; GOTO 10280
10230 LET ETMP$="*"+ETMP$+"*"
10240 LET ETMP$=ETMP$(1,XTMP)+ITMP$+ETMP$(XTMP+1)
10250 LET ETMP$=ETMP$(2),ETMP$=ETMP$(1,LEN(ETMP$)-1)
10260 LET ETMP$=ETMP$(1,MIN(LEN(ETMP$),MAXLEN))
10280 LET XTMP=XTMP+1
10290 GOSUB 10900; GOTO 10100
10299 REM 
10300 REM -----<Left Arrow, Right Arrow & Tab
10310 IF ITMP$=$13$ THEN LET XTMP=MAX(XTMP-1,1)
10320 IF ITMP$=$0C$ THEN LET XTMP=MIN(XTMP+1,LEN(ETMP$)+1)
10330 IF ITMP$=$09$ THEN LET XTMP=MIN(XTMP+5,LEN(ETMP$)+1)
10340 GOSUB 10900; GOTO 10100
10349 REM 
10350 REM -----<Home & End
10360 IF ITMP$=$03$ THEN LET Z9=23
10370 IF ITMP$=$06$ THEN LET Z9=24
10390 RETURN 
10399 REM 
10400 REM -----<Up Arrow, Page Up & Down
10410 IF ITMP$=$12$ THEN LET Z9=25
10420 IF ITMP$=$10$ THEN LET Z9=22
10430 IF ITMP$=$11$ THEN LET Z9=21
10440 RETURN 
10449 REM 
10500 REM -----<Dn Arrow & Enter
10510 IF ITMP$=$05$ THEN LET NEWVAL$=ETMP$,Z9=26
10520 IF ITMP$=$0D$ THEN LET NEWVAL$=ETMP$,Z9=27
10590 RETURN 
10599 REM 
10600 REM -----<Backspace
10610 IF ITOG$="REP" AND XTMP<=LEN(ETMP$) THEN LET XTMP=MAX(XTMP-1,0); GOSUB 1
10610:0900; GOTO 10100
10620 IF XTMP=1 THEN GOTO 10100
10630 LET ETMP$="*"+ETMP$+"*",ETMP$=ETMP$(1,XTMP-1)+ETMP$(XTMP+1),ETMP$=ETMP$(
10630:2),ETMP$=ETMP$(1,LEN(ETMP$)-1)
10660 LET XTMP=XTMP-1
10690 GOSUB 10900; GOTO 10100
10699 REM 
10700 REM -----<Delete
10710 IF XTMP>LEN(ETMP$) OR ETMP$="" THEN GOTO 10100
10720 LET ETMP$="*"+ETMP$+"*",ETMP$=ETMP$(1,XTMP)+ETMP$(XTMP+2),ETMP$=ETMP$(2)
10720:,ETMP$=ETMP$(1,LEN(ETMP$)-1)
10740 GOSUB 10900; GOTO 10100
10749 REM 
10750 REM -----<Ctl-W
10760 LET ETMP$=ETMP$(1,XTMP-1)
10790 GOSUB 10900; GOTO 10100
10799 REM 
10800 REM -----<Insert
10810 IF ITOG$="REP" THEN LET ITOG$="INS"; PRINT @(X+XTMP,Y+YTMP),'CURSOR'("IN
10810:S"), ELSE LET ITOG$="REP"; PRINT @(X+XTMP,Y+YTMP),'CURSOR'("REP"),
10890 GOSUB 10900; GOTO 10100
10899 REM 
10900 REM -----<Redisplay
10910 LET XUSE$="Y"
10920 LET DTMP$=ETMP$+FILL(MAXLEN-LEN(ETMP$))
10930 PRINT @(X,Y),FILL(LEN(MASK1$)),@(X,Y),'BR',DTMP$,'ER',
10990 RETURN 
10999 REM 
11000 REM -----<F-Keys
11010 LET Z9=POS(ITMP$=FTMP$)
11090 RETURN 
11099 REM 
